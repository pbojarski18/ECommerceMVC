@using ECommerceMVC.Application.Dtos.Products
@model CustomerProductViewModel

<div class="tabs-container">
    <div class="tab-buttons">
        @foreach (var category in Model.ProductCategories)
        {
            <button class="tab-button" data-target="#category-@category.Id" onclick="showTab('@category.Id')">
                @category.Name
            </button>
        }
    </div>

    <div class="tab-contents">
        @foreach (var category in Model.ProductCategories)
        {
            <div id="category-@category.Id" class="tab-content">
                <div class="subcategory-buttons">
                    @foreach (var subCategory in category.Subcategories)
                    {
                        <form method="get" asp-action="by-id" asp-route-productSubcategoryId="@subCategory.Id" asp-controller="Product">
                            <input type="hidden" name="Id" value="@subCategory.Id" />
                            <button class="subcategory-button" type="submit">
                                @subCategory.Name
                            </button>

                        </form>

                    }
                </div>
            </div>
        }
    </div>
</div>
@if (Model != null && Model.Products.Any())
{
    <div class="container mb-5">
        <h2 class="text-center mb-4">Our Products</h2>
        <div class="row justify-content-center">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4 col-sm-6 mb-4">
                    <div class="card shadow-sm border-light">
                        <img class="card-img-top" src="@product.ImagePath" alt="@product.Name" style="height: 200px; object-fit: cover;" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name @product.Brand</h5>
                            <p class="card-text text-muted">
                                @if (product.Description.Length > 50)
                                {
                                    @product.Description.Substring(0, 50)

                                }
                                else
                                {
                                    @product.Description
                                }
                            </p>
                            <div class="mt-auto">
                                <p class="card-text text-primary">@product.Price.ToString("C")</p>
                                <form method="get" asp-action="ProductDetails" asp-route-id="@product.Id" asp-controller="Product">
                                    <input type="hidden" name="Id" value="@product.Id" />
                                    <button class="subcategory-button" type="submit">
                                        Product Details
                                    </button>
                                </form>
                                @if (product.ProductQuantity > 0)
                                {
                                    <button type="button" class="btn btn-danger btn-sm"
                                            onclick="openBasketModal(@product.Id, @product.Price)">
                                        Add to basket
                                    </button>
                                }
                                else
                                {
                                    <button disabled type="button" class="btn btn-danger btn-sm"
                                            onclick="openBasketModal(@product.Id, @product.Price)">
                                        Add to basket
                                    </button>
                                    <span>Currently unavailable.</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
<div class="modal" id="basketModal" tabindex="-1" role="dialog" aria-labelledby="basketModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="basketModalLabel">Add to basket</h5>
                <button type="button" class="close" onclick="closeBasketModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" asp-action="AddBasket" asp-controller="Basket">
                    <input type="hidden" name="productId" id="productIdInput" />
                    <input type="hidden" name="totalCost" id="totalCostInput" />
                    <div class="form-group">
                        <label for="quantityInput">Quantity:</label>
                        <input type="number" class="form-control" id="quantityInput" name="productQuantity" min="1" value="1" />
                    </div>
                    <button type="submit" class="btn btn-primary">Add to basket</button>
                </form>
            </div>
        </div>
    </div>
</div>
<style>
    .tabs-container {
        display: flex;
        flex-direction: column;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .tab-buttons {
        display: flex;
        background-color: #f4f4f4;
    }

    .tab-button {
        flex: 1;
        padding: 15px;
        border: none;
        background: transparent;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s;
    }

        .tab-button:hover {
            background-color: #e0e0e0;
        }

    .tab-content {
        display: none;
        padding: 20px;
        border-top: 1px solid #ddd;
    }

        .tab-content.active {
            display: block;
        }

    h3 {
        margin-bottom: 10px;
        font-size: 1.5em;
        color: #333;
    }

    .subcategory-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 10px;
    }

    .subcategory-button {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .subcategory-button:hover {
            background-color: #0056b3;
        }

    .card {
        transition: transform 0.2s;
    }

        .card:hover {
            transform: scale(1.05);
        }

    .card-title {
        font-weight: bold;
    }

    .card-text {
        overflow-wrap: break-word;
        word-wrap: break-word;
        hyphens: auto;
    }



    .modal {
        display: none; /* Ukryj modal domyślnie */
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5); /* Tło */
    }

    .modal-dialog {
        margin: 15% auto;
        max-width: 500px;
    }

    /* Klasa do blokowania interakcji z tłem */
    .modal-open {
        overflow: hidden; /* Zablokuj przewijanie tła */
    }
</style>

<script>
    function showTab(categoryId) {
        // Hide all tab contents
        const allContents = document.querySelectorAll('.tab-content');
        allContents.forEach(content => {
            content.classList.remove('active');
        });

        // Show the selected tab content
        const activeContent = document.getElementById('category-' + categoryId);
        if (activeContent) {
            activeContent.classList.add('active');
        }
    }

    function openBasketModal(productId, productPrice) {
        document.getElementById('productIdInput').value = productId;
        document.getElementById('totalCostInput').value = productPrice;
        var modal = document.getElementById('basketModal');
        modal.style.display = "block"; // Otwórz modal
        modal.setAttribute('aria-hidden', 'false'); // Ustaw aria-hidden na false
        document.body.classList.add('modal-open'); // Dodaj klasę do body, aby zablokować przewijanie
    }

    function closeBasketModal() {
        var modal = document.getElementById('basketModal');
        modal.style.display = "none"; // Zamknij modal
        modal.setAttribute('aria-hidden', 'true'); // Ustaw aria-hidden na true
        document.body.classList.remove('modal-open'); // Usuń klasę z body, aby przywrócić przewijanie
    }

    // Zamknij modal po kliknięciu w tło
    window.onclick = function (event) {
        var modal = document.getElementById('basketModal');
        if (event.target === modal) {
            closeBasketModal();
        }
    }

    // Initialize the first tab as active
    document.addEventListener('DOMContentLoaded', () => {
        const firstButton = document.querySelector('.tab-button');
        if (firstButton) {
            firstButton.click();
        }
    });
</script>
@*
<div class="container mb-5">
    <h2 class="d-flex justify-cotent-start">Products</h2>

    <form method="post" asp-action="CustomerProduct" class="d-flex flex-column gap-2 border border-dark mb-5">
        <div class="d-flex flex-row">
            <div class="form-group">
                <label for="productType">Select Product Type:</label>
                <select id="productType" name="productType" class="form-control">
                    <option value="">All</option>
                    <option value="1">Rackets</option>
                    <option value="2">Balls</option>
                    <option value="3">Bags</option>
                    <option value="4">Accessories</option>
                </select>
            </div>
        </div>
        <div class="d-flex flex-row gap-2">
            <input type="hidden" name="CurrentPage" value="@filters.CurrentPage" />
            <input type="hidden" name="PageSize" value="@filters.PageSize" />
            <div class="form-group">
                <input type="number" id="minWeight" name="minWeight" class="form-control" placeholder="Minimum Weight" />
            </div>

            <div class="form-group">
                <input type="number" id="maxWeight" name="maxWeight" class="form-control" placeholder="Maximum Weight" />
            </div>

            <div class="form-group">
                <input type="number" id="minPrice" name="minPrice" class="form-control" placeholder="Minimum Price" />
            </div>

            <div class="form-group">
                <input type="number" id="maxPrice" name="maxPrice" class="form-control" placeholder="Maximum Price" />
            </div>

            <div class="form-group">
                <input type="text" id="name" name="name" class="form-control" placeholder="Name" />
            </div>
        </div>

        <div class="d-flex flex-row">

            <div>
                <button type="submit" class="btn btn-secondary">Search</button>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" onclick="increasePageAndSubmit()">
                    <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8" />
                </svg>
            </div>
        </div>
    </form>



    @if (Model != null && Model.Any())
    {
        <div class="container mb-5">
            <h2 class="text-center mb-4">Our Products</h2>
            <div class="row justify-content-center">
                @foreach (var product in Model)
                {
                    <div class="col-md-4 col-sm-6 mb-4">
                        <div class="card shadow-sm border-light">
                            <img class="card-img-top" src="@product.ImagePath" alt="@product.Name" style="height: 200px; object-fit: cover;" />
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@product.Name @product.Brand</h5>
                                <p class="card-text text-muted">
                                    @if (product.Description.Length > 50)
                                    {
                                        @product.Description.Substring(0, 50)

                                    }
                                    else
                                    {
                                        @product.Description
                                    }
                                </p>
                                <div class="mt-auto">
                                    <p class="card-text text-primary">@product.Price.ToString("C")</p>
                                    <button class="btn btn-outline-primary">View Details</button>
                                    @if (product.ProductQuantity > 0)
                                    {
                                        <button type="button" class="btn btn-danger btn-sm"
                                                onclick="openBasketModal(@product.Id, @product.Price)">
                                            Add to basket
                                        </button>
                                    }
                                    else
                                    {
                                        <button disabled type="button" class="btn btn-danger btn-sm"
                                                onclick="openBasketModal(@product.Id, @product.Price)">
                                            Add to basket
                                        </button>
                                        <span>Currently unavailable.</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    <div class="p-5" />
</div>
<div class="modal" id="basketModal" tabindex="-1" role="dialog" aria-labelledby="basketModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="basketModalLabel">Add to basket</h5>
                <button type="button" class="close" onclick="closeBasketModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" asp-action="AddBasket" asp-controller="Basket">
                    <input type="hidden" name="productId" id="productIdInput" />
                    <input type="hidden" name="totalCost" id="totalCostInput" />
                    <div class="form-group">
                        <label for="quantityInput">Quantity:</label>
                        <input type="number" class="form-control" id="quantityInput" name="productQuantity" min="1" value="1" />
                    </div>
                    <button type="submit" class="btn btn-primary">Add to basket</button>
                </form>
            </div>
        </div>
    </div>
</div>



<style>
    .card {
        transition: transform 0.2s;
    }

        .card:hover {
            transform: scale(1.05);
        }

    .card-title {
        font-weight: bold;
    }

    .card-text {
        overflow-wrap: break-word;
        word-wrap: break-word;
        hyphens: auto;
    }



    .modal {
        display: none; /* Ukryj modal domyślnie */
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5); /* Tło */
    }

    .modal-dialog {
        margin: 15% auto;
        max-width: 500px;
    }

    /* Klasa do blokowania interakcji z tłem */
    .modal-open {
        overflow: hidden; /* Zablokuj przewijanie tła */
    }

</style>

<script>
    function increasePageAndSubmit() {
        var currentPageInput = document.querySelector('input[name="CurrentPage"]');
        currentPageInput.value = parseInt(currentPageInput.value) + 1;

        currentPageInput.form.submit();

    }

    function openBasketModal(productId, productPrice) {
        document.getElementById('productIdInput').value = productId;
        document.getElementById('totalCostInput').value = productPrice;
        var modal = document.getElementById('basketModal');
        modal.style.display = "block"; // Otwórz modal
        modal.setAttribute('aria-hidden', 'false'); // Ustaw aria-hidden na false
        document.body.classList.add('modal-open'); // Dodaj klasę do body, aby zablokować przewijanie
    }

    function closeBasketModal() {
        var modal = document.getElementById('basketModal');
        modal.style.display = "none"; // Zamknij modal
        modal.setAttribute('aria-hidden', 'true'); // Ustaw aria-hidden na true
        document.body.classList.remove('modal-open'); // Usuń klasę z body, aby przywrócić przewijanie
    }

    // Zamknij modal po kliknięciu w tło
    window.onclick = function (event) {
        var modal = document.getElementById('basketModal');
        if (event.target === modal) {
            closeBasketModal();
        }
    }

</script> *@